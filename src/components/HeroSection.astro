---
import { Image } from "astro:assets";
import { Icon } from 'astro-icon/components';
interface AudienceSegment {
  headline: string;
  substatement: string;
}

const description: string = `
Senior Care is no longer waiting for change, we are building it.

AI, automation, and human insight are coming together across the entire chain - from facility to reinsurer - to eliminate friction, reduce exposure, disclose the facts, and protect what matters.

Broker and Carrier relationships are being redefined by better data, smarter systems, and sharper insights.

Senior Care Alliance exists to accelerate this transformation by quietly reshaping how liability is understood and managed.
`;
// Datos para los distintos segmentos de audiencia
const audienceSegments: AudienceSegment[] = [
  {
    headline: "Empowering Brokers with AI-Driven Analytics âœ¨",
    substatement:
      "Match clients with optimal coverage using real-time risk data and predictive analytics to close more deals and reduce policy turnover.",
  },
  {
    headline: "Precision Underwriting for Enhanced Results ðŸ“ˆ",
    substatement:
      "Accurately assess facility risks, customize policies with confidence, and reduce loss ratios while maintaining competitive pricing.",
  },
  {
    headline: "Transforming Carrier Operations through Intelligence ðŸ§ ",
    substatement:
      "Optimize your senior care portfolio with comprehensive data insights, predictive claim analytics, and automated risk assessment.",
  },
];

// TÃ­tulo principal constante
const mainTitle = "Who Said Underwriting ";
const secondaryTitle = "Senior Care Liability";
const highlight = "Is Just Legalized Gambling?";

// Get environment variable for map URL
const mapUrl = import.meta.env.PUBLIC_URL;
console.log('Environment variable PUBLIC_URL:', mapUrl);
---

<section class="bg-gradient-to-r bg-[#0c285e] pb-6 sm:pb-16 md:pb-20 -mt-1">
  <div class="container mx-auto px-4 sm:px-6">
    <div class="flex flex-col md:flex-row md:space-x-10 items-center">
      <div class="w-full md:w-1/2 mb-8 md:mb-0 pt-4 md:pt-0">
        <!-- <h1
          class="text-2xl sm:text-3xl md:text-4xl lg:text-5xl text-white font-semibold tracking-wide mb-4 sm:mb-6"
        >
          {mainTitle}<span class="text-[#4A9FFF]">{secondaryTitle}</span> {highlight}
        </h1> -->

        <p
          class="text-sm line whitespace-pre-line sm:text-base md:text-lg tracking-wider text-gray-200 mb-6 sm:mb-10 md:mb-14 max-w-2xl leading-relaxed"
        >
          {description}
        </p>

        <!-- Slider for audience segments -->
        <!-- <div
          class="slider-container relative overflow-hidden rounded-lg bg-white/20 shadow-sm backdrop-blur-sm mb-8"
        >
          <div
            id="slider-track"
            class="flex transition-transform duration-500 ease-in-out"
          >
            {audienceSegments.map((segment, index) => (
              <div
                class="slider-slide min-w-full px-4 sm:px-6 py-6 sm:py-8"
                data-index={index}
              >
                <h3 class="text-xl sm:text-2xl font-semibold text-[#4A9FFF] mb-2 sm:mb-3 flex items-center gap-2 tracking-tight">
                  <span class="slide-number flex-shrink-0 flex items-center justify-center h-6 w-6 sm:h-8 sm:w-8 rounded-full bg-[#4A9FFF]/20 text-[#4A9FFF] text-xs sm:text-sm">
                    {index + 1}
                  </span>
                  <span class="min-w-0">{segment.headline}</span>
                </h3>
                <p class="text-base sm:text-lg text-gray-200 mb-0 max-w-2xl leading-relaxed antialiased font-normal">
                  {segment.substatement}
                </p>
              </div>
            ))}
          </div>

          <div
            class="slider-controls flex justify-center items-center mt-3 sm:mt-4 px-2 py-2"
          >
            <div class="slider-dots flex space-x-2 sm:space-x-3">
              {audienceSegments.map((_, index) => (
                <button
                  class={`slider-dot h-1.5 sm:h-2 w-6 sm:w-10 rounded-full transition-all duration-300 ${index === 0 ? "bg-[#2A669F] w-10 sm:w-16" : "bg-gray-300"}`}
                  data-index={index}
                  aria-label={`Switch to segment ${index + 1}`}
                />
              ))}
            </div>
          </div>
        </div> -->

        <div
          class="flex flex-col sm:flex-row space-y-3 sm:space-y-0 sm:space-x-4"
        >
        <a
          href={mapUrl}
          class="relative overflow-hidden bg-white text-[#0c285e] border border-[#0c285e] hover:bg-[#0c285e] hover:text-white hover:border-white hover:shadow-[0_0_15px_rgba(255,255,255,0.8)] transition-all duration-300 font-medium sm:font-semibold px-6 sm:px-8 py-3 sm:py-4 md:py-6 rounded-xl sm:rounded-2xl text-center text-sm sm:text-base before:absolute before:inset-0 before:bg-gradient-to-r before:from-transparent before:via-white before:to-transparent before:opacity-0 hover:before:opacity-20 before:transition-opacity before:duration-500"
        >
          Check out one of your facilities on the map
        </a>
        </div>
      </div>
      <div
        class="relative w-full md:w-1/2 rounded-xl sm:rounded-2xl bg-[#0c285e] shadow-lg hover:shadow-[0_0_25px_rgba(12,40,94,0.6)] transition-all duration-300 overflow-hidden group cursor-pointer mt-2 md:mt-0"
      >
        <a href={mapUrl}>
        {/* Imagen */}
        <Image
          src="/images/map.png"
          alt="Coverage Map"
          width={800}
          height={600}
          class="rounded-lg w-full h-auto transition-transform duration-500 group-hover:scale-110 filter brightness-105 contrast-105"
        />
        <Icon 
          name="search" 
          class="absolute top-1/2 left-1/2 -translate-x-3 -translate-y-3 text-[#0c285e] w-20 h-20 sm:w-24 sm:h-24 md:w-30 md:h-30 opacity-90 drop-shadow-[0_0_8px_rgba(255,255,255,0.8)] group-hover:opacity-0 transition-all duration-300 group-hover:scale-150 group-hover:rotate-45 animate-bounce-pulse" 
        />
        {/* Overlay + CTA */}
        <div class="absolute inset-0 bg-gradient-to-t from-[#0c285e]/80 via-[#0c285e]/30 to-transparent flex flex-col justify-end p-4 sm:p-6 opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-2 group-hover:translate-y-0">
          <div class="flex items-center gap-2 sm:gap-3 mb-1 sm:mb-2">
            <div class="bg-white h-6 sm:h-8 w-1 rounded-full"></div>
            <span class="text-white text-lg sm:text-xl font-bold tracking-wide">EXPLORE OUR COVERAGE</span>
          </div>
          <p class="text-white/80 text-xs sm:text-sm ml-8 sm:ml-11">See where we're making an impact across the nation</p>
        </div>
        <div class="absolute top-4 right-4 sm:top-6 sm:right-6 bg-[#0c285e] text-white text-xs font-bold py-1 px-3 rounded-full shadow-md">
          INTERACTIVE
        </div>
        </a>
      </div>      
    </div>
  </div>
</section>

<script>
  // Function to handle slider functionality
  function setupSlider() {
    const sliderTrack = document.getElementById("slider-track");
    const slides = document.querySelectorAll(".slider-slide");
    const dots = document.querySelectorAll(".slider-dot");

    // Check if elements exist before proceeding
    if (!sliderTrack) {
      console.error("Slider elements not found");
      return;
    }

    let currentIndex = 0;
    const totalSlides = slides.length;

    // Function to update the slider position
    function goToSlide(index: number): void {
      // Normalize index (loop back if needed)
      if (index < 0) index = totalSlides - 1;
      if (index >= totalSlides) index = 0;

      // Update the transform to slide to the correct position
      (sliderTrack as HTMLElement).style.transform =
        `translateX(-${index * 100}%)`;

      // Update active dot
      dots.forEach((dot, i) => {
        dot.classList.toggle("bg-[#2A669F]", i === index);
        dot.classList.toggle("bg-gray-300", i !== index);

        // Handle responsive widths
        if (i === index) {
          dot.classList.add("w-10", "sm:w-16");
          dot.classList.remove("w-6", "sm:w-10");
        } else {
          dot.classList.add("w-6", "sm:w-10");
          dot.classList.remove("w-10", "sm:w-16");
        }
      });

      currentIndex = index;
    }

    // Set up automatic rotation
    let autoRotation = setInterval(() => {
      goToSlide(currentIndex + 1);
    }, 5000);

    // Reset timer when manually changing slides
    function resetTimer() {
      clearInterval(autoRotation);
      autoRotation = setInterval(() => {
        goToSlide(currentIndex + 1);
      }, 5000);
    }

    // Setup click handlers for dots
    dots.forEach((dot, index) => {
      dot.addEventListener("click", () => {
        goToSlide(index);
        resetTimer();
      });
    });

    // Initialize the slider
    goToSlide(0);
  }

  // Run the setup when the DOM is loaded
  document.addEventListener("DOMContentLoaded", setupSlider);
</script>

<style>
  .slider-container {
    overflow: hidden;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    background-color: rgba(255, 255, 255, 0.15);
  }

  @media (min-width: 640px) {
    .slider-container {
      border-radius: 12px;
      box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);
    }
  }

  /* Mobile-specific styles */
  @media (max-width: 639px) {
    .slider-slide h3 {
      font-size: 1.1rem;
      line-height: 1.4;
    }
    
    .slider-slide p {
      font-size: 0.95rem;
      line-height: 1.5;
    }
  }

  .slider-track {
    display: flex;
    transition: transform 0.5s ease-in-out;
  }

  .slider-slide {
    min-width: 100%;
  }

  .slider-slide h3 {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    letter-spacing: -0.01em;
  }

  .slider-slide p {
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
    color: rgba(236, 236, 236, 0.9);
  }

  .slider-dot {
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .slider-dot:hover {
    background-color: rgba(74, 159, 255, 0.7);
  }

  .slider-controls {
    margin-top: -6px;
  }

  @media (min-width: 640px) {
    .slider-controls {
      margin-top: -8px;
    }
  }

  .slide-number {
    font-weight: 600;
  }

  @keyframes bounce-pulse {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.9;
    }
    50% {
      transform: translate(-50%, -58%) scale(1.05);
      opacity: 1;
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.9;
    }
  }

  .animate-bounce-pulse {
    animation: bounce-pulse 2.5s ease-in-out infinite;
    top: 50% !important;
    left: 50% !important;
  }

  /* Group hover should stop the animation */
  .group:hover .animate-bounce-pulse {
    animation: none;
  }
</style>
